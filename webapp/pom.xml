<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
    <artifactId>parent</artifactId>
    <groupId>org.malhi</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
    <packaging>war</packaging>
    <artifactId>webapp</artifactId>

    <properties>
        <appengine.app.version>1</appengine.app.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       <!-- Convenience property to set the GWT version -->
	    <gwtVersion>2.7.0</gwtVersion>
	
	    <!-- GWT needs at least java 1.6 -->
	    <maven.compiler.source>1.7</maven.compiler.source>
	    <maven.compiler.target>1.7</maven.compiler.target>
	 </properties>

    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt</artifactId>
        <version>${gwtVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

    <dependencies>
        <!-- Compile/runtime dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>1.9.17</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- GWT Dependencies -->
<!--	    <dependency>
	      <groupId>com.google.gwt</groupId>
	      <artifactId>gwt-servlet</artifactId>
	      <scope>runtime</scope>
	    </dependency> 
-->	    <dependency>
	      <groupId>com.google.gwt</groupId>
	      <artifactId>gwt-user</artifactId>
	      <scope>provided</scope>
	    </dependency>
<!--`	    <dependency>
	      <groupId>com.google.gwt</groupId>
	      <artifactId>gwt-dev</artifactId>
	      <scope>provided</scope>
	    </dependency>
-->	    <!-- GWT Bootstrap3 dependencies-->
	    <dependency>
		  <groupId>org.gwtbootstrap3</groupId>
	      <artifactId>gwtbootstrap3</artifactId>
	      <version>0.8.1</version>
	      <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.gwtbootstrap3</groupId>
			<artifactId>gwtbootstrap3-extras</artifactId>
			<version>0.8.1</version>
			<scope>provided</scope>
		</dependency>	 
		<!-- RESTY-GWT -->
		<dependency>
			<groupId>org.fusesource.restygwt</groupId>
			<artifactId>restygwt</artifactId>
			<version>1.4</version>
		</dependency>
        <!-- Test Dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>1.9.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>1.9.17</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
      <!-- Output classes directly into the webapp, so that IDEs and "mvn process-classes" update them in DevMode -->
      <!-- for hot reload of the web application-->
        <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
        <plugins>
       <!-- GWT Maven Plugin -->
	      <plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>gwt-maven-plugin</artifactId>
		<version>2.7.0</version>
		<executions>
		  <execution>
		    <goals>
		      <goal>compile</goal>
		      <goal>test</goal>
		      <goal>generateAsync</goal>
		    </goals>
		  </execution>
		</executions>
		<!-- Plugin configuration. There are many available options, see 
		  gwt-maven-plugin documentation at codehaus.org -->
		<configuration>
		<server>com.google.appengine.tools.development.gwt.AppEngineLauncher</server>
		<appEngineVersion>1.9.17</appEngineVersion>
		  <runTarget>index.html</runTarget>
		  <modules>
		    <module>org.malhi.Main</module>
		  </modules>
		</configuration>
	      </plugin>
	    <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>display-dependency-updates</goal>
                            <goal>display-plugin-updates</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.1</version>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archiveClasses>true</archiveClasses>
                    <webResources>
                        <!-- in order to interpolate version from pom into appengine-web.xml -->
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>1.9.17</version>
                <configuration>
                    <enableJarClasses>false</enableJarClasses>
                    <!-- Comment in the below snippet to bind to all IPs instead of just localhost -->
                    <!-- address>0.0.0.0</address>
                    <port>8080</port -->
                    <!-- Comment in the below snippet to enable local debugging with a remove debugger
                         like those included with Eclipse or IntelliJ -->
                    <!-- jvmFlags>
                      <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag>
                    </jvmFlags -->
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.codehaus.mojo
        								</groupId>
        								<artifactId>
        									versions-maven-plugin
        								</artifactId>
        								<versionRange>
        									[2.1,)
        								</versionRange>
        								<goals>
        									<goal>
        										display-dependency-updates
        									</goal>
        									<goal>
        										display-plugin-updates
        									</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>
</project>
